<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApeVolo.Api</name>
    </assembly>
    <members>
        <member name="M:ApeVolo.Api.ActionExtension.BaseActionFilter.JsonContent(ApeVolo.Common.Model.ActionResultVm)">
            <summary>
            返回JSON
            </summary>
            <param name="vm"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.BaseActionFilter.Error(System.String)">
            <summary>
            返回错误
            </summary>
            <param name="msg">错误提示</param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.BaseActionFilter.Error(System.String,System.Int32)">
            <summary>
            返回错误
            </summary>
            <param name="msg">错误提示</param>
            <param name="errorCode">错误代码</param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.ActionExtension.Json.JsonParamterAttribute">
            <summary>
            Json参数支持
            </summary>
        </member>
        <member name="T:ApeVolo.Api.ActionExtension.Json.NoJsonParamterAttribute">
            <summary>
            忽略Json参数支持
            </summary>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Json.NoJsonParamterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Action执行之前执行
            </summary>
            <param name="context">过滤器上下文</param>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Json.NoJsonParamterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Action执行完毕之后执行
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:ApeVolo.Api.ActionExtension.Jwt.TokenFilterAttribute">
            <summary>
            JWT校验
            </summary>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Jwt.TokenFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Action执行之前执行
            </summary>
            <param name="context">过滤器上下文</param>
        </member>
        <member name="T:ApeVolo.Api.ActionExtension.Parameter.CheckParamNotEmptyAttribute">
            <summary>
            参数非空校验
            </summary>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Parameter.CheckParamNotEmptyAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Action执行之前执行
            </summary>
            <param name="filterContext">过滤器上下文</param>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Parameter.CheckParamNotEmptyAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Action执行完毕之后执行
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Sign.IgnoreVerifySignatureAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Action执行之前执行
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:ApeVolo.Api.ActionExtension.Sign.VerifySignatureAttribute">
            <summary>
            接口对外签名验证
            </summary>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Sign.VerifySignatureAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Action执行之前执行
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:ApeVolo.Api.ActionExtension.Sign.VerifySignatureAttribute.BuildApiSign(System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            生成接口签名sign
            注：md5(appId+time+guid+body+appSecret)
            </summary>
            <param name="appId">应用Id</param>
            <param name="appSecret">应用密钥</param>
            <param name="guid">唯一GUID</param>
            <param name="time">时间</param>
            <param name="body">请求体</param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Aop.RedisAop">
            <summary>
            Redis缓存拦截器
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Aop.RedisAop.CreateCacheKey(Castle.DynamicProxy.IInvocation,ApeVolo.Common.AttributeExt.RedisCachingAttribute)">
            <summary>
            构建Redis Key
            </summary>
            <param name="invocation"></param>
            <param name="redisCachingAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Aop.RedisAop.GetArgumentValue(System.Object)">
            <summary>
            获取参数值类型值
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Aop.TransactionAop">
            <summary>
            事务拦截器
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Aop.TransactionAop.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法 
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="T:ApeVolo.Api.Authentication.JwtToken">
            <summary>
            JWTToken生成类
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Authentication.JwtToken.BuildJwtToken(System.Security.Claims.Claim[],ApeVolo.Api.Authentication.PermissionRequirement)">
            <summary>
            获取基于JWT的Token
            </summary>
            <param name="claims">需要在登陆的时候配置</param>
            <param name="permissionRequirement">在startup中定义的参数</param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Authentication.PermissionHandler">
            <summary>
            权限授权处理器
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionHandler.Schemes">
            <summary>
            验证方案提供对象
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Authentication.PermissionHandler.#ctor(Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Http.IHttpContextAccessor,ApeVolo.IBusiness.Interface.Core.IPermissionService,ApeVolo.Common.WebApp.ICurrentUser,ApeVolo.IBusiness.Interface.Core.ISettingService,ApeVolo.Common.Caches.Redis.Service.IRedisCacheService)">
            <summary>
            构造函数注入
            </summary>
            <param name="schemes"></param>
            <param name="accessor"></param>
            <param name="permissionService"></param>
            <param name="currentUser"></param>
            <param name="settingService"></param>
            <param name="redisCacheService"></param>
        </member>
        <member name="T:ApeVolo.Api.Authentication.PermissionList">
            <summary>
            权限列表
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionList.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionList.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Authentication.PermissionRequirement">
            <summary>
            权限信息 用于自定义权限处理器PermissionHandler
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Authentication.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{ApeVolo.Api.Authentication.PermissionList},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.Permissions">
            <summary>
            用户权限集合
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:ApeVolo.Api.Authentication.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="T:ApeVolo.Api.AutoMapper.AutoMapperConfig">
            <summary>
            静态全局 AutoMapper 配置文件
            </summary>
        </member>
        <member name="M:ApeVolo.Api.AutoMapper.CustomProfile.InitAutoMapper">
            <summary>
            所有含有AutoInject属性的类进行映射
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.AppSecretController">
            <summary>
            全局设置管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AppSecretController.Create(ApeVolo.IBusiness.EditDto.Core.CreateUpdateAppSecretDto)">
            <summary>
            新增设置
            </summary>
            <param name="createUpdateAppSecretDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AppSecretController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateAppSecretDto)">
            <summary>
            更新设置
            </summary>
            <param name="createUpdateAppSecretDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AppSecretController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除设置
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AppSecretController.Query(ApeVolo.IBusiness.QueryModel.AppsecretQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            获取设置列表
            </summary>
            <param name="appsecretQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AppSecretController.Download(ApeVolo.IBusiness.QueryModel.AppsecretQueryCriteria)">
            <summary>
            导出设置
            </summary>
            <param name="appsecretQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.AuditingController">
            <summary>
            审计管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AuditingController.Query(ApeVolo.IBusiness.QueryModel.LogQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            审计列表
            </summary>
            <param name="logQueryCriteria">查询对象</param>
            <param name="pagination">分页对象</param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AuditingController.FindListByCurrent(ApeVolo.Common.Model.Pagination)">
            <summary>
            当前用户行为
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.AuthorizationController">
            <summary>
            授权管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AuthorizationController.Login(ApeVolo.IBusiness.QueryModel.LoginAuthUser)">
            <summary>
            用户登录
            </summary>
            <param name="authUser"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AuthorizationController.GetCode">
            <summary>
            获取图片验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AuthorizationController.ResetEmail(System.String)">
            <summary>
            获取验证码，申请变更邮箱
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.AuthorizationController.Logout">
            <summary>
            系统用户登出
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.Base.BaseApiController">
            <summary>
            API对外接口基控制器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Controllers.Base.BaseController">
            <summary>
            基控制器
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Base.BaseController.JsonContent(ApeVolo.Common.Model.ActionResultVm)">
            <summary>
            
            </summary>
            <param name="vm"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Base.BaseController.Success(System.String)">
            <summary>
            返回成功
            </summary>
            <param name="msg">消息</param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Base.BaseController.Create(System.String)">
            <summary>
            创建成功
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Base.BaseController.NoContent(System.String)">
            <summary>
            更新成功 无需刷新
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Base.BaseController.Error(System.String)">
            <summary>
            返回错误
            </summary>
            <param name="msg">错误提示</param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.DeptController">
            <summary>
            部门管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DeptController.Create(ApeVolo.IBusiness.EditDto.Core.CreateUpdateDepartmentDto)">
            <summary>
            新增部门
            </summary>
            <param name="createUpdateDepartmentDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DeptController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateDepartmentDto)">
            <summary>
            更新部门
            </summary>
            <param name="createUpdateDepartmentDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DeptController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除部门
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DeptController.Query(ApeVolo.IBusiness.QueryModel.DeptQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看部门列表
            </summary>
            <param name="deptQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DeptController.Download(ApeVolo.IBusiness.QueryModel.DeptQueryCriteria)">
            <summary>
            导出部门
            </summary>
            <param name="deptQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DeptController.GetSuperior(System.Collections.Generic.List{System.Int64})">
            <summary>
            获取同级与父级部门
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.DictController">
            <summary>
            字典管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictController.Create(ApeVolo.IBusiness.EditDto.Dict.CreateUpdateDictDto)">
            <summary>
            新增字典
            </summary>
            <param name="createUpdateDictDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictController.Update(ApeVolo.IBusiness.EditDto.Dict.CreateUpdateDictDto)">
            <summary>
            更新字典
            </summary>
            <param name="createUpdateDictDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除字典
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictController.Query(ApeVolo.IBusiness.QueryModel.DictQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看字典列表
            </summary>
            <param name="dictQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictController.Download(ApeVolo.IBusiness.QueryModel.DictQueryCriteria)">
            <summary>
            导出字典
            </summary>
            <param name="dictQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.DictDetailController">
            <summary>
            字典详情管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictDetailController.Create(ApeVolo.IBusiness.EditDto.Dict.CreateUpdateDictDetailDto)">
            <summary>
            新增字典详情
            </summary>
            <param name="createUpdateDictDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictDetailController.Update(ApeVolo.IBusiness.EditDto.Dict.CreateUpdateDictDetailDto)">
            <summary>
            更新字典详情
            </summary>
            <param name="createUpdateDictDetailDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictDetailController.Delete(System.String)">
            <summary>
            删除字典详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.DictDetailController.Query(ApeVolo.IBusiness.QueryModel.DictDetailQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看字典详情列表
            </summary>
            <param name="dictDetailQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.Email.EmailAccountController">
            <summary>
            邮箱账户
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailAccountController.Create(ApeVolo.IBusiness.EditDto.Email.CreateUpdateEmailAccountDto)">
            <summary>
            新增邮箱账户
            </summary>
            <param name="createUpdateEmailAccountDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailAccountController.Update(ApeVolo.IBusiness.EditDto.Email.CreateUpdateEmailAccountDto)">
            <summary>
            更新邮箱账户
            </summary>
            <param name="createUpdateEmailAccountDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailAccountController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除邮箱账户
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailAccountController.FindList(ApeVolo.IBusiness.QueryModel.EmailAccountQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            邮箱账户列表
            </summary>
            <param name="emailAccountQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailAccountController.Download(ApeVolo.IBusiness.QueryModel.EmailAccountQueryCriteria)">
            <summary>
            导出邮箱账户
            </summary>
            <param name="emailAccountQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.Email.EmailMessageTemplateController">
            <summary>
            邮箱账户
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailMessageTemplateController.Create(ApeVolo.IBusiness.EditDto.Email.CreateUpdateEmailMessageTemplateDto)">
            <summary>
            新增邮箱账户
            </summary>
            <param name="createUpdateEmailMessageTemplateDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailMessageTemplateController.Update(ApeVolo.IBusiness.EditDto.Email.CreateUpdateEmailMessageTemplateDto)">
            <summary>
            更新邮箱账户
            </summary>
            <param name="createUpdateEmailMessageTemplateDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailMessageTemplateController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除邮箱账户
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Email.EmailMessageTemplateController.Query(ApeVolo.IBusiness.QueryModel.EmailMessageTemplateQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            邮箱账户列表
            </summary>
            <param name="messageTemplateQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.ExceptionLogController">
            <summary>
            系统异常日志管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.ExceptionLogController.FindList(ApeVolo.IBusiness.QueryModel.LogQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看异常日志列表
            </summary>
            <param name="logQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.ExceptionLogController.QueryDetail(System.String)">
            <summary>
            查看日志堆栈详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.FileRecordController">
            <summary>
            文件存储管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.FileRecordController.Upload(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            新增文件
            </summary>
            <param name="file"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.FileRecordController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateFileRecordDto)">
            <summary>
            更新文件描述
            </summary>
            <param name="createUpdateAppSecretDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.FileRecordController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除文件
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.FileRecordController.Query(ApeVolo.IBusiness.QueryModel.FileRecordQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            获取文件列表
            </summary>
            <param name="fileRecordQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.FileRecordController.Download(ApeVolo.IBusiness.QueryModel.FileRecordQueryCriteria)">
            <summary>
            导出文件记录
            </summary>
            <param name="fileRecordQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.JobController">
            <summary>
            岗位管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.JobController.Create(ApeVolo.IBusiness.EditDto.Core.CreateUpdateJobDto)">
            <summary>
            新增岗位
            </summary>
            <param name="createUpdateJobDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.JobController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateJobDto)">
            <summary>
            更新岗位
            </summary>
            <param name="createUpdateJobDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.JobController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除岗位
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.JobController.Query(ApeVolo.IBusiness.QueryModel.JobQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看岗位列表
            </summary>
            <param name="jobQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.JobController.QueryAll">
            <summary>
            获取所有岗位
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.JobController.Download(ApeVolo.IBusiness.QueryModel.JobQueryCriteria)">
            <summary>
            导出岗位
            </summary>
            <param name="jobQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.MenusController">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.CreateMenu(ApeVolo.IBusiness.EditDto.Core.CreateUpdateMenuDto)">
            <summary>
            新增菜单
            </summary>
            <param name="createUpdateMenuDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.UpdateDept(ApeVolo.IBusiness.EditDto.Core.CreateUpdateMenuDto)">
            <summary>
            更新菜单
            </summary>
            <param name="createUpdateMenuDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除菜单
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.Build">
            <summary>
            构建树形菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.GetMenuLazy(System.Int64)">
            <summary>
            获取子菜单
            </summary>
            <param name="pid">父级ID</param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.Query(ApeVolo.IBusiness.QueryModel.MenuQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看菜单列表
            </summary>
            <param name="menuQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.Download(ApeVolo.IBusiness.QueryModel.MenuQueryCriteria)">
            <summary>
            导出菜单
            </summary>
            <param name="menuQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.MenusController.GetSuperior(System.Collections.Generic.List{System.Int64})">
            <summary>
            获取同级与上级菜单
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.OnlineController">
            <summary>
            在线用户
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.OnlineController.QueryPageList(ApeVolo.Common.Model.Pagination)">
            <summary>
            在线用户列表
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.OnlineController.DropOut(System.Collections.Generic.HashSet{System.String})">
            <summary>
            强制登出用户
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.OnlineController.Download">
            <summary>
            导出在线用户
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.QuartzNetController">
            <summary>
            作业调度管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Create(ApeVolo.IBusiness.EditDto.Tasks.CreateUpdateQuartzNetDto)">
            <summary>
            新增作业
            </summary>
            <param name="createUpdateQuartzNetDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Update(ApeVolo.IBusiness.EditDto.Tasks.CreateUpdateQuartzNetDto)">
            <summary>
            更新作业
            </summary>
            <param name="createUpdateQuartzNetDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除作业
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Query(ApeVolo.IBusiness.QueryModel.QuartzNetQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            获取作业调度任务列表
            </summary>
            <param name="quartzNetQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Download(ApeVolo.IBusiness.QueryModel.QuartzNetQueryCriteria)">
            <summary>
            导出作业调度
            </summary>
            <param name="quartzNetQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Execute(System.Int64)">
            <summary>
            执行作业
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Pause(System.Int64)">
            <summary>
            暂停作业
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Resume(System.Int64)">
            <summary>
            恢复作业
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.QueryLog(ApeVolo.IBusiness.QueryModel.QuartzNetLogQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            作业调度执行日志
            </summary>
            <param name="quartzNetLogQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.QuartzNetController.Download(ApeVolo.IBusiness.QueryModel.QuartzNetLogQueryCriteria)">
            <summary>
            导出作业日志
            </summary>
            <param name="quartzNetLogQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.Queued.QueuedEmailController">
            <summary>
            邮箱账户
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Queued.QueuedEmailController.Create(ApeVolo.IBusiness.EditDto.Queued.CreateUpdateQueuedEmailDto)">
            <summary>
            新增邮箱账户
            </summary>
            <param name="createUpdateQueuedEmailDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Queued.QueuedEmailController.Update(ApeVolo.IBusiness.EditDto.Queued.CreateUpdateQueuedEmailDto)">
            <summary>
            更新邮箱账户
            </summary>
            <param name="createUpdateQueuedEmailDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Queued.QueuedEmailController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除邮箱账户
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.Queued.QueuedEmailController.Query(ApeVolo.IBusiness.QueryModel.QueuedEmailQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            邮箱账户列表
            </summary>
            <param name="queuedEmailQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.RoleController">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.Create(ApeVolo.IBusiness.EditDto.Core.CreateUpdateRoleDto)">
            <summary>
            添加角色
            </summary>
            <param name="createUpdateRoleDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateRoleDto)">
            <summary>
            更新角色
            </summary>
            <param name="createUpdateRoleDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除角色
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.QuerySingle(System.String)">
            <summary>
            查看单一角色
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.Query(ApeVolo.IBusiness.QueryModel.RoleQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看角色列表
            </summary>
            <param name="roleQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.Download(ApeVolo.IBusiness.QueryModel.RoleQueryCriteria)">
            <summary>
            导出角色列表
            </summary>
            <param name="roleQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.GetAllRoles">
            <summary>
            获取全部角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleController.GetRoleLevel(System.Nullable{System.Int32})">
            <summary>
            获取当前用户角色等级
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.RoleMenuController">
            <summary>
            角色与菜单管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.RoleMenuController.UpdateRolesMenus(ApeVolo.IBusiness.EditDto.Core.CreateUpdateRoleDto)">
            <summary>
            更新角色菜单关联
            </summary>
            <param name="createUpdateRoleDto"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.ServiceMonitoringController">
            <summary>
            服务器监控
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Controllers.SettingController">
            <summary>
            全局设置管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.SettingController.Create(ApeVolo.IBusiness.EditDto.Core.CreateUpdateSettingDto)">
            <summary>
            新增设置
            </summary>
            <param name="createUpdateSettingDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.SettingController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateSettingDto)">
            <summary>
            更新设置
            </summary>
            <param name="createUpdateSettingDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.SettingController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除设置
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.SettingController.Query(ApeVolo.IBusiness.QueryModel.SettingQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            获取设置列表
            </summary>
            <param name="settingQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.SettingController.Download(ApeVolo.IBusiness.QueryModel.SettingQueryCriteria)">
            <summary>
            导出设置
            </summary>
            <param name="settingQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.TestController">
            <summary>
            测试
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.TestController.TestSecret">
            <summary>
            邮件测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.TestController.AddApeVolo">
            <summary>
            Apache JMeter 性能测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.TestController.TestSign">
            <summary>
            签名测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.TestController.TestRedisMq">
            <summary>
            redismq测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.TestController.Test123456">
            <summary>
            redismq测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Controllers.UserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Controllers.UserController.Create(ApeVolo.IBusiness.EditDto.Core.CreateUpdateUserDto)">
            <summary>
            新增用户
            </summary>
            <param name="createUpdateUserDto"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.UserController.Update(ApeVolo.IBusiness.EditDto.Core.CreateUpdateUserDto)">
            <summary>
            更新用户
            </summary>
            <param name="createUpdateUserDto"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ApeVolo.Api.Controllers.UserController.Delete(System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            删除用户
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.UserController.Query(ApeVolo.IBusiness.QueryModel.UserQueryCriteria,ApeVolo.Common.Model.Pagination)">
            <summary>
            查看用户列表
            </summary>
            <param name="userQueryCriteria"></param>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Controllers.UserController.Download(ApeVolo.IBusiness.QueryModel.UserQueryCriteria)">
            <summary>
            导出用户列表
            </summary>
            <param name="userQueryCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Extensions.AuthorizationSetup">
            <summary>
            授权启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.AutofacRegister">
            <summary>
            autofac注册
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.AutoMapperSetup">
            <summary>
            实体映射启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.CorsSetup">
            <summary>
            跨域启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.DbSetup">
            <summary>
            数据库上下文启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.EventBusSetup">
            <summary>
            事件总线启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.IpRateLimitSetup">
            <summary>
            IP限流启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.MemoryCacheSetup">
            <summary>
            缓存启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.MiniProfilerSetup">
            <summary>
            MiniProfiler性能监控启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.QuartzNetJobSetup">
            <summary>
            QuartzNet作业启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.RabbitMQSetup">
            <summary>
            rabbitmq启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.RedisCacheSetup">
            <summary>
            redis启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.RedisInitMqSetup">
            <summary>
            redis消息队列
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Extensions.SqlsugarSetup">
            <summary>
            SqlSugar 启动器
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Extensions.SqlsugarSetup.GetParams(SqlSugar.SugarParameter[])">
            <summary>
            参数拼接字符串
            </summary>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Extensions.SwaggerSetup">
            <summary>
            swaggerSetup启动器
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Filter.AuditingFilter">
            <summary>
            审计过滤器
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Filter.AuditingFilter.ExecuteAuditing(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            执行审计功能
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Filter.AuditingFilter.CreateAuditLog(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            创建审计对象
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Filter.ExceptionLogFormat">
            <summary>
            统一输出日志格式
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Filter.ExceptionLogFormat.WriteLog(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            自定义返回格式
            </summary>
            <param name="httpContext">http上下文</param>
            <param name="exception">异常类</param>
            <param name="currentUserName">当前用户名</param>
            <param name="operatingSystem">操作系统</param>
            <param name="deviceType">设备类型</param>
            <param name="browserName">浏览器名称</param>
            <param name="version">版本号</param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Filter.ExceptionLogFormat.GetResourcesDescription(System.String,System.String)">
            <summary>
            获取描述本地化语言
            </summary>
            <param name="description"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Filter.GlobalExceptionFilter.CreateLog(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            创建审计对象
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ApeVolo.Api.Filter.GlobalExceptionFilter.GetExceptionError(System.Int32)">
            <summary>
            根据状态码获取错误名称
            </summary>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Middleware.CorsMiddleware">
            <summary>
            跨域中间件
            </summary>
        </member>
        <member name="M:ApeVolo.Api.Middleware.CorsMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            管道执行到该中间件时候下一个中间件的RequestDelegate请求委托，如果有其它参数，也同样通过注入的方式获得
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:ApeVolo.Api.Middleware.CorsMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            自定义中间件要执行的逻辑
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ApeVolo.Api.Middleware.IpLimitMiddleware">
            <summary>
            IP限流策略中间件
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Middleware.Log4NetExtensions">
            <summary>
            log4net扩展
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Middleware.MiniProfilerMiddleware">
            <summary>
            性能监控中间件
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Middleware.QuartzNetJobMiddleware">
            <summary>
            QuartzNet作业调度中间件
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Middleware.RealIpMiddleware">
            <summary>
            远程IP中间件，nginx代理服务的时候需要使用才能通过RemoteIpAddress获取客户端真实IP
            </summary>
        </member>
        <member name="T:ApeVolo.Api.Middleware.SwaggerMiddleware">
            <summary>
            Swagger UI 中间件
            </summary>
        </member>
        <member name="T:ApeVolo.Api.MQ.Rabbit.EventHandling.UserQueryIntegrationEventHandler">
            <summary>
            测试rabbitmq事件总线
            </summary>
        </member>
        <member name="M:ApeVolo.Api.MQ.Rabbit.EventHandling.UserQueryIntegrationEventHandler.Handle(ApeVolo.Api.MQ.Rabbit.Events.UserQueryIntegrationEvent)">
            <summary>
            处理事件
            </summary>
            <param name="event"></param>
        </member>
    </members>
</doc>
